<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\PaypalProduct;
use Srmklive\PayPal\Facades\PayPal;
use Illuminate\Support\Facades\Auth;

class PaypalProductController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {

        $getCMS = PaypalProduct::all();
        return view('paypal.product.product', get_defined_vars());
    }


    public function create()
    {

        return view('paypal.product.create', get_defined_vars());
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {

        $provider = PayPal::setProvider();
        $provider->setApiCredentials(config('paypal'));
        $provider->getAccessToken();
        $data = ([
            'name' => $request->name,
            'description' => $request->description,
            'type' => "SERVICE",
            'category' =>"SOFTWARE",
        ]);
        $request_id = $request->name.time();
        $response = $provider->createProduct($data,$request_id);
        PaypalProduct::create([
            'user_id' => Auth::user()->id,
            'name' => $request->name,
            'description' => $request->description,
            // 'type' => $request->type,
            // 'category' => $request->category,
            'product_response' => json_encode($response),
            'product_id' => $response['id'],
        ]);
        $notification = array('message' => 'Your Prodcut created Successfully.!', 'alert-type' => 'success');
        return redirect()->back()->with($notification);

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($product_id)
    {
        $provider = PayPal::setProvider();
        $provider->setApiCredentials(config('paypal'));
        $provider->getAccessToken();
        $product_id = $product_id;
        $product = $provider->showProductDetails($product_id);
        return response()->json([$product]);

    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $productdata =  PaypalProduct::find($id);

        return view('paypal.product.edit', get_defined_vars());
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request,$id)
    {

        $productdata =  PaypalProduct::where('id',$id)->first();
        $provider = PayPal::setProvider();
        $provider->setApiCredentials(config('paypal'));
        $provider->getAccessToken();

        $data = json_decode('[
            {
              "op": "replace",
              "path": "/description",
              "value": "'.$request->description.'"
            }
          ]', true);
        $product_id_data = $productdata->product_id;
        $updatedProduct = $provider->updateProduct($product_id_data, $data);
        $updatedProduct = PaypalProduct::where('product_id', $product_id_data)->first();
        $updatedProduct->description = $request->description;
        $updatedProduct->save();
        $notification = array('message' => 'Your Prodcut Updated Successfully.!', 'alert-type' => 'success');
            return redirect()->back()->with($notification);

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        // // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/

    }
}
